---
version: "3.8"

# Шаблон для Django сервисов
x-django-common: &django-common
  image: ghcr.io/bigbread57/alabuga-oneplusplus-backend:latest
  restart: unless-stopped
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
  networks:
    - main
  env_file: .env
  environment:
    DJANGO_DATABASE_HOST: postgres

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - main
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - main
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Django Backend
  backend:
    <<: *django-common
    volumes:
      - django_static:/app/alabuga/static
      - django_media:/app/alabuga/media
    command: /usr/local/bin/start-web-server
    expose:
      - "8000"
    # healthcheck:
    #   test: ["CMD", "curl", "--fail", "http://localhost:8000/health/"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Next.js Frontend
  frontend:
    image: ghcr.io/bigbread57/alabuga-oneplusplus-frontend:latest
    restart: unless-stopped
    networks:
      - main
    environment:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
      API_URL: https://${DOMAIN_NAME}/api/v1
    expose:
      - "8080"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - django_static:/var/www/django/static:ro
      - django_media:/var/www/django/media:ro
    depends_on:
      - backend
      - frontend
    networks:
      - main
      - ingress
    environment:
      VIRTUAL_HOST: ${DOMAIN_NAME}
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: ${DOMAIN_NAME}
    expose:
      - "80"

  # Celery Worker
  celery-worker:
    <<: *django-common
    command: poetry run celery -A alabuga.celery worker -l info
    # healthcheck:
    #   test: ["CMD", "celery", "-A", "alabuga.celery", "inspect", "ping"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # Celery Beat
  celery-beat:
    <<: *django-common
    command: poetry run celery -A alabuga.celery beat -l info

networks:
  ingress:
    external:
      name: nginx-proxy_default
  main:
    driver: bridge

volumes:
  redis_data:
  django_static:
  django_media: