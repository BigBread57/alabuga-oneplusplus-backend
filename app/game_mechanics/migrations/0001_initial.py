# Generated by Django 4.2.24 on 2025-09-19 07:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Artifact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("media", models.ImageField(blank=True, upload_to="artifacts", verbose_name="Медиа")),
                ("name", models.CharField(max_length=256, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("COMMON", "Обычный"),
                            ("UNCOMMON", "Необычный"),
                            ("RARE", "Редкий"),
                            ("EPIC", "Эпический"),
                            ("LEGEND", "Легендарный"),
                        ],
                        default="COMMON",
                        max_length=20,
                        verbose_name="Редкость",
                    ),
                ),
            ],
            options={
                "verbose_name": "Артефакт",
                "verbose_name_plural": "Артефакты",
                "ordering": ["-id"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BoardingStep",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("title", models.CharField(max_length=256, verbose_name="Заголовок")),
                (
                    "content",
                    models.TextField(help_text="Интересные факты о космосе и платформе", verbose_name="Контент"),
                ),
                ("order", models.IntegerField(default=0, verbose_name="Порядок")),
                ("is_active", models.BooleanField(default=True, verbose_name="Активен")),
            ],
            options={
                "verbose_name": "Шаг онбординга",
                "verbose_name_plural": "Шаги онбординга",
                "ordering": ["order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Competency",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("name", models.CharField(max_length=256, unique=True, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("icon", models.ImageField(blank=True, null=True, upload_to="competencies", verbose_name="Иконка")),
            ],
            options={
                "verbose_name": "Компетенция",
                "verbose_name_plural": "Компетенции",
                "ordering": ["-id"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Rank",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("name", models.CharField(max_length=256, unique=True, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Порядковый номер ранга в иерархии", verbose_name="Порядок"
                    ),
                ),
                (
                    "experience_required",
                    models.IntegerField(
                        default=0,
                        help_text="Минимальное количество опыта для получения ранга",
                        verbose_name="Требуемый опыт",
                    ),
                ),
                ("icon", models.ImageField(blank=True, null=True, upload_to="ranks", verbose_name="Иконка")),
            ],
            options={
                "verbose_name": "Ранг",
                "verbose_name_plural": "Ранги",
                "ordering": ["order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserRank",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                (
                    "rank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="gamification.rank",
                        verbose_name="Ранг",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_rank",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ранг пользователя",
                "verbose_name_plural": "Ранги пользователей",
                "ordering": ["-id"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserCompetency",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("level", models.IntegerField(default=0, verbose_name="Уровень")),
                (
                    "competency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_levels",
                        to="gamification.competency",
                        verbose_name="Компетенция",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competencies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Компетенция пользователя",
                "verbose_name_plural": "Компетенции пользователей",
                "ordering": ["-id"],
                "abstract": False,
                "unique_together": {("user", "competency")},
            },
        ),
        migrations.CreateModel(
            name="UserBoardingProgress",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("completed_at", models.DateTimeField(blank=True, null=True, verbose_name="Завершен")),
                (
                    "step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_progress",
                        to="gamification.boardingstep",
                        verbose_name="Шаг",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="boarding_progress",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Прогресс онбординга",
                "verbose_name_plural": "Прогресс онбординга",
                "ordering": ["-id"],
                "abstract": False,
                "unique_together": {("user", "step")},
            },
        ),
        migrations.CreateModel(
            name="UserArtifact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                (
                    "artifact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owners",
                        to="gamification.artifact",
                        verbose_name="Артефакт",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artifacts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Артефакт пользователя",
                "verbose_name_plural": "Артефакты пользователей",
                "ordering": ["-id"],
                "abstract": False,
                "unique_together": {("user", "artifact")},
            },
        ),
        migrations.CreateModel(
            name="RequiredRankCompetency",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Изменен")),
                ("level_required", models.IntegerField(default=1, verbose_name="Требуемый уровень")),
                (
                    "competency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rank_requireds",
                        to="gamification.competency",
                        verbose_name="Компетенция",
                    ),
                ),
                (
                    "rank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competency_requireds",
                        to="gamification.rank",
                        verbose_name="Ранг",
                    ),
                ),
            ],
            options={
                "verbose_name": "Требование к компетенции",
                "verbose_name_plural": "Требования к компетенциям",
                "ordering": ["-id"],
                "abstract": False,
                "unique_together": {("rank", "competency")},
            },
        ),
    ]
