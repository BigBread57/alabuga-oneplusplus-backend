# Generated by Django 5.2.6 on 2025-09-27 21:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("game_mechanics", "0002_initial"),
        ("game_world", "0001_initial"),
        ("user", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="event",
            name="mentor",
            field=models.ForeignKey(
                blank=True,
                help_text="Ментор, который может помочь в выполнении события",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events_branches",
                to="user.character",
                verbose_name="Ментор",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="rank",
            field=models.ForeignKey(
                help_text="В рамках какого ранга это событие доступно для выполнения",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="game_mechanics.rank",
                verbose_name="Ранг события",
            ),
        ),
        migrations.AddField(
            model_name="eventartifact",
            name="artifact",
            field=models.ForeignKey(
                help_text="Артефакт, который получает персонаж по успешному завершению события",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_artifacts",
                to="game_world.artifact",
                verbose_name="Артефакт",
            ),
        ),
        migrations.AddField(
            model_name="eventartifact",
            name="event",
            field=models.ForeignKey(
                help_text="Событие персонажа за успешное выполнение которого он сможет получить артефакт",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_artifacts",
                to="game_world.event",
                verbose_name="Событие",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="artifacts",
            field=models.ManyToManyField(
                blank=True,
                help_text="Артефакты, которые может получить персонаж за успешное выполнение события",
                related_name="events",
                through="game_world.EventArtifact",
                to="game_world.artifact",
                verbose_name="Артефакты",
            ),
        ),
        migrations.AddField(
            model_name="eventcompetency",
            name="competency",
            field=models.ForeignKey(
                help_text="Компетенция, которую прокачивает персонаж по успешному завершению события",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_competencies",
                to="game_mechanics.competency",
                verbose_name="Компетенция",
            ),
        ),
        migrations.AddField(
            model_name="eventcompetency",
            name="event",
            field=models.ForeignKey(
                help_text="Событие персонажа за успешное выполнение которого он прокачивает компетенцию",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_competencies",
                to="game_world.event",
                verbose_name="Событие",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="competencies",
            field=models.ManyToManyField(
                blank=True,
                help_text="Компетенции, которые прокачиваются у персонажа за успешное выполнение события",
                related_name="events",
                through="game_world.EventCompetency",
                to="game_mechanics.competency",
                verbose_name="Компетенции",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="game_world",
            field=models.ForeignKey(
                help_text="Игровой мир в рамках которого создается событие",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events",
                to="game_world.gameworld",
                verbose_name="Игровой мир",
            ),
        ),
        migrations.AddField(
            model_name="artifact",
            name="game_world",
            field=models.ForeignKey(
                help_text="Игровой мир в рамках которого создается артефакт",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="artifacts",
                to="game_world.gameworld",
                verbose_name="Игровой мир",
            ),
        ),
        migrations.AddField(
            model_name="gameworldsettings",
            name="content_type",
            field=models.ForeignKey(
                help_text="Тип содержимого",
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
                verbose_name="Тип содержимого",
            ),
        ),
        migrations.AddField(
            model_name="gameworldstory",
            name="content_type",
            field=models.ForeignKey(
                help_text="Тип содержимого",
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
                verbose_name="Тип содержимого",
            ),
        ),
        migrations.AddField(
            model_name="gameworldstory",
            name="game_world",
            field=models.ForeignKey(
                help_text="Игровой мир в рамках которого создается история, особенности и описание его предметов и механик",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="game_world_stories",
                to="game_world.gameworld",
                verbose_name="Игровой мир",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="category",
            field=models.ForeignKey(
                help_text="Категория ветки миссии",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="missions",
                to="game_world.activitycategory",
                verbose_name="Категория",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="game_world",
            field=models.ForeignKey(
                help_text="Игровой мир в рамках которого создается миссия",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="missions",
                to="game_world.gameworld",
                verbose_name="Игровой мир",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="mentor",
            field=models.ForeignKey(
                blank=True,
                help_text="Ментор, который может помочь в выполнении миссии",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_mentors",
                to="user.character",
                verbose_name="Ментор",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="required_missions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Миссии, которые нужно выполнить для доступа к этой миссии",
                related_name="unlocks_missions",
                to="game_world.mission",
                verbose_name="Необходимые миссии",
            ),
        ),
        migrations.AddField(
            model_name="missionartifact",
            name="artifact",
            field=models.ForeignKey(
                help_text="Артефакт, который получает персонаж по успешному завершению миссии",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_artifacts",
                to="game_world.artifact",
                verbose_name="Артефакт",
            ),
        ),
        migrations.AddField(
            model_name="missionartifact",
            name="mission",
            field=models.ForeignKey(
                help_text="Миссия персонажа за успешное выполнение которого он сможет получить артефакт",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_artifacts",
                to="game_world.mission",
                verbose_name="Миссия",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="artifacts",
            field=models.ManyToManyField(
                blank=True,
                help_text="Артефакты, которые может получить персонаж за успешное выполнение миссии",
                related_name="missions",
                through="game_world.MissionArtifact",
                to="game_world.artifact",
                verbose_name="Артефакты",
            ),
        ),
        migrations.AddField(
            model_name="missionbranch",
            name="category",
            field=models.ForeignKey(
                help_text="Категория ветки миссии",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_branches",
                to="game_world.activitycategory",
                verbose_name="Категория",
            ),
        ),
        migrations.AddField(
            model_name="missionbranch",
            name="game_world",
            field=models.ForeignKey(
                help_text="Игровой мир в рамках которого создается ветка миссий",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_branches",
                to="game_world.gameworld",
                verbose_name="Игровой мир",
            ),
        ),
        migrations.AddField(
            model_name="missionbranch",
            name="mentor",
            field=models.ForeignKey(
                blank=True,
                help_text="Ментор, который может помочь в выполнении ветки миссий",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_branch_mentors",
                to="user.character",
                verbose_name="Ментор",
            ),
        ),
        migrations.AddField(
            model_name="missionbranch",
            name="rank",
            field=models.ForeignKey(
                help_text="В рамках какого ранга эта ветка событий доступно для выполнения",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="mission_branches",
                to="game_mechanics.rank",
                verbose_name="Ранг ветки миссий",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="branch",
            field=models.ForeignKey(
                help_text="Ветка миссии",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="missions",
                to="game_world.missionbranch",
                verbose_name="Ветка",
            ),
        ),
        migrations.AddField(
            model_name="missioncompetency",
            name="competency",
            field=models.ForeignKey(
                help_text="Компетенция, которую прокачивает персонаж по успешному завершению миссии",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_competencies",
                to="game_mechanics.competency",
                verbose_name="Компетенция",
            ),
        ),
        migrations.AddField(
            model_name="missioncompetency",
            name="mission",
            field=models.ForeignKey(
                help_text="Миссия персонажа за успешное выполнение которого он прокачивает компетенцию",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mission_competencies",
                to="game_world.mission",
                verbose_name="Миссия",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="competencies",
            field=models.ManyToManyField(
                blank=True,
                help_text="Компетенции, которые прокачиваются у персонажа за успешное выполнение миссии",
                related_name="missions",
                through="game_world.MissionCompetency",
                to="game_mechanics.competency",
                verbose_name="Компетенции миссии",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="missions",
                to="game_world.missionlevel",
                verbose_name="Уровень",
            ),
        ),
    ]
