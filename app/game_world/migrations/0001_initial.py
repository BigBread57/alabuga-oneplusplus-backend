# Generated by Django 5.2.6 on 2025-10-02 14:10

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActivityCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название категории активности", max_length=256, verbose_name="Название"
                    ),
                ),
                ("description", models.TextField(help_text="Описание категории активности", verbose_name="Описание")),
                (
                    "repeatability",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Количество дней, через которую данную категории активности стоит повторить. Используется в некоторых миссиях и событиях. Например: категория 'Еженедельная миссия', repeatability = 7",
                        null=True,
                        verbose_name="Через сколько дней повторять активность",
                    ),
                ),
                (
                    "icon",
                    models.ImageField(blank=True, null=True, upload_to="mission_categories", verbose_name="Иконка"),
                ),
                ("color", models.CharField(blank=True, max_length=256, verbose_name="Цвет")),
            ],
            options={
                "verbose_name": "Категория активности",
                "verbose_name_plural": "Категории активностей",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Artifact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название артефакта", max_length=256, unique=True, verbose_name="Название"
                    ),
                ),
                ("description", models.TextField(blank=True, help_text="Описание артефакта", verbose_name="Описание")),
                ("icon", models.ImageField(blank=True, null=True, upload_to="competencies", verbose_name="Иконка")),
                ("color", models.CharField(blank=True, max_length=256, verbose_name="Цвет")),
                (
                    "modifier",
                    models.CharField(
                        choices=[
                            ("DEFAULT", "Стандартный"),
                            ("EXPERIENCE_GAIN", "Прирост опыта"),
                            ("CURRENCY_GAIN", "Прирост валюты"),
                            ("SHOP_DISCOUNT", "Скидка в магазине"),
                        ],
                        default="DEFAULT",
                        help_text="Значение модификатора для артефакта. Только некоторые артефакты имеют модификатор",
                        max_length=20,
                        verbose_name="Модификатор",
                    ),
                ),
                (
                    "modifier_value",
                    models.PositiveIntegerField(
                        help_text="Значение модификатора в %. На сколько увеличивается тот или иной показатель (обычно не больше 5 %).",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Значение модификатора в %",
                    ),
                ),
            ],
            options={
                "verbose_name": "Артефакт",
                "verbose_name_plural": "Артефакты",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventArtifact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Артефакт события",
                "verbose_name_plural": "Артефакты событий",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventCompetency",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "experience",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Сколько получит опыта компетенции за успешное прохождение события",
                        verbose_name="Опыт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Компетенция события",
                "verbose_name_plural": "Компетенции событий",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameWorld",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название игрового мира", max_length=256, unique=True, verbose_name="Название"
                    ),
                ),
                ("description", models.TextField(help_text="Описание игрового мира", verbose_name="Описание")),
                ("color", models.CharField(max_length=256, verbose_name="Цвет")),
                (
                    "standard_experience",
                    models.PositiveIntegerField(
                        help_text="Стандартный размер опыта, начисляемый за очень простую миссию",
                        verbose_name="Стандартный размер опыта, начисляемый за очень простую миссию",
                    ),
                ),
                (
                    "standard_currency",
                    models.PositiveIntegerField(
                        help_text="Стандартный размер валюты, начисляемый за очень простую миссию",
                        verbose_name="Стандартный размер валюты, начисляемый за очень простую миссию",
                    ),
                ),
                ("currency_name", models.CharField(help_text="Название валюты", verbose_name="Название валюты")),
                (
                    "data_for_graph",
                    models.JSONField(
                        blank=True, help_text="Данные для графа", null=True, verbose_name="Данные для графа"
                    ),
                ),
            ],
            options={
                "verbose_name": "Игровой мир",
                "verbose_name_plural": "Игровые миры",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameWorldStory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="history_game_worlds", verbose_name="Изображение"
                    ),
                ),
                ("text", models.TextField(help_text="Описание истории, лора", verbose_name="Текст")),
                ("object_id", models.PositiveIntegerField(help_text="Id объекта", verbose_name="Id объекта")),
            ],
            options={
                "verbose_name": "История игрового мира",
                "verbose_name_plural": "История игрового мира",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Mission",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("name", models.CharField(help_text="Название миссии", max_length=256, verbose_name="Название")),
                (
                    "description",
                    models.TextField(
                        help_text="Описание миссии. Что должен сделать пользователей в рамках миссии с учетом трудовой деятельности",
                        verbose_name="Описание миссии",
                    ),
                ),
                (
                    "experience",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Награда в опыте, которое получит персонаж по завершению миссии",
                        verbose_name="Награда в опыте",
                    ),
                ),
                (
                    "currency",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Награда в валюте, которую получит персонаж по завершению миссии",
                        verbose_name="Награда в валюте",
                    ),
                ),
                ("icon", models.ImageField(blank=True, null=True, upload_to="missions", verbose_name="Иконка")),
                ("color", models.CharField(blank=True, max_length=256, verbose_name="Цвет")),
                ("order", models.IntegerField(default=1, help_text="Порядок в ветке", verbose_name="Порядок в ветке")),
                (
                    "is_key_mission",
                    models.BooleanField(
                        default=False,
                        help_text="Является ли миссия обязательной чтобы получить новый ранг",
                        verbose_name="Ключевая миссия или нет",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Активная миссия или нет", verbose_name="Активная миссия или нет"
                    ),
                ),
                (
                    "time_to_complete",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Количество дней на успешное выполнение миссии",
                        null=True,
                        verbose_name="Количество дней на успешное выполнение миссии",
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(blank=True, null=True, upload_to="qr_code_missions", verbose_name="QR код"),
                ),
            ],
            options={
                "verbose_name": "Миссия",
                "verbose_name_plural": "Миссии",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MissionArtifact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Артефакт миссии",
                "verbose_name_plural": "Артефакты миссий",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MissionBranch",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("name", models.CharField(help_text="Название ветки миссий", max_length=256, verbose_name="Название")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Описание ветки миссий. Что должен сделать пользователей в рамках ветки миссий с учетом трудовой деятельности",
                        verbose_name="Описание",
                    ),
                ),
                ("icon", models.ImageField(blank=True, null=True, upload_to="mission_branches", verbose_name="Иконка")),
                ("color", models.CharField(blank=True, max_length=256, verbose_name="Цвет")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Активная ветка миссий или нет",
                        verbose_name="Активная ветка миссий или нет",
                    ),
                ),
                (
                    "start_datetime",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата и время для запуска ветки событий. Используется для создания отложенных веток и должна сочетать с категорией.",
                        null=True,
                        verbose_name="Дата и время для запуска",
                    ),
                ),
                (
                    "time_to_complete",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Количество дней на успешное выполнение ветки миссиий",
                        null=True,
                        verbose_name="Количество дней на успешное выполнение миссии",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ветка миссий",
                "verbose_name_plural": "Ветки миссий",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MissionCompetency",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "experience",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Сколько получит опыта компетенции за успешное прохождение миссии",
                        verbose_name="Опыт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Компетенция миссии",
                "verbose_name_plural": "Компетенции миссий",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MissionLevel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("name", models.CharField(help_text="Название уровня миссии", max_length=256, verbose_name="Название")),
                (
                    "description",
                    models.TextField(blank=True, help_text="Описание уровня миссии", verbose_name="Описание"),
                ),
                ("icon", models.ImageField(blank=True, null=True, upload_to="mission_levels", verbose_name="Иконка")),
                ("color", models.CharField(blank=True, max_length=256, verbose_name="Цвет")),
                (
                    "multiplier_experience",
                    models.PositiveIntegerField(
                        help_text="Множитель опыта от стандартного, в %. На сколько процентов увеличивается стандартный размер опыта исходя из сложности миссии",
                        verbose_name="Множитель опыта от стандартного, в %",
                    ),
                ),
                (
                    "multiplier_currency",
                    models.PositiveIntegerField(
                        help_text="Множитель валюты от стандартного, в %. На сколько процентов увеличивается стандартный размер валюты исходя из сложности миссии",
                        verbose_name="Множитель валюты от стандартного, в %",
                    ),
                ),
            ],
            options={
                "verbose_name": "Уровень миссии",
                "verbose_name_plural": "Уровни миссий",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата и время создания объекта")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата и время изменения объекта")),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Используется при генерации объектов через для понимания новый объект или старый",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("name", models.CharField(help_text="Название события", max_length=256, verbose_name="Название")),
                (
                    "description",
                    models.TextField(
                        help_text="Описание события. Что должен сделать пользователей в рамках события с учетом трудовой деятельности",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "experience",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Награда в опыте, которое получит персонаж по завершению события",
                        verbose_name="Награда в опыте",
                    ),
                ),
                (
                    "currency",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Награда в валюте, которую получит персонаж по завершению события",
                        verbose_name="Награда в валюте",
                    ),
                ),
                ("icon", models.ImageField(blank=True, null=True, upload_to="events", verbose_name="Иконка")),
                ("color", models.CharField(blank=True, max_length=256, verbose_name="Цвет")),
                (
                    "required_number",
                    models.PositiveIntegerField(
                        help_text="Сколько персонажей должны посетить или закрыть это событие для общего успеха",
                        verbose_name="Обязательное количество выполненных событий для всех игроков",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Активно событие или нет", verbose_name="Активно событие или нет"
                    ),
                ),
                (
                    "start_datetime",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата и время для запуска события. Используется для создания отложенных событий и должна сочетать с категорией.",
                        null=True,
                        verbose_name="Дата и время для запуска",
                    ),
                ),
                (
                    "time_to_complete",
                    models.PositiveIntegerField(
                        help_text="Количество дней на успешное выполнение события",
                        verbose_name="Количество дней на успешное выполнение события",
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(blank=True, null=True, upload_to="qr_code_events", verbose_name="QR код"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Категория события",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="game_world.activitycategory",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Событие",
                "verbose_name_plural": "События",
                "ordering": ("-id",),
                "abstract": False,
            },
        ),
    ]
