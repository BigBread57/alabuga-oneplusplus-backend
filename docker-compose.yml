---
version: "3.8"

# Base configuration for local development
services:
  db:
    image: postgres:17-alpine
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-alabuga_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - main

  # Redis
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - main

  # Django Backend
  backend:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
      - django_static:/app/alabuga/static
      - django_media:/app/alabuga/media
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      DJANGO_DATABASE_HOST: postgres
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DEBUG: "True"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: poetry run python manage.py runserver 0.0.0.0:8000
    networks:
      - main

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
    env_file: .env
    environment:
      DJANGO_DATABASE_HOST: postgres
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: poetry run celery -A alabuga.celery worker --pool=threads --loglevel=info
    networks:
      - main

  # Celery Beat
  celery-beat:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
    env_file: .env
    environment:
      DJANGO_DATABASE_HOST: postgres
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: poetry run celery -A alabuga.celery beat --loglevel=info
    networks:
      - main

  # Flower (Celery monitoring)
  flower:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
    ports:
      - "5555:5555"
    env_file: .env
    environment:
      DJANGO_DATABASE_HOST: postgres
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
    command: poetry run celery -A alabuga.celery flower --port=5555
    networks:
      - main

networks:
  main:
    driver: bridge

volumes:
  pgdata:
  redis_data:
  django_static:
  django_media: