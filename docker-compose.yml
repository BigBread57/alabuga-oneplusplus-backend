---
version: "3.8"

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: alabuga_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
      - django-static:/var/www/django/static
    ports:
      - "8000:8000"
    env_file: ./app/config/.env
    environment:
      - DJANGO_DATABASE_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: poetry run python manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
    env_file: ./app/config/.env
    environment:
      - DJANGO_DATABASE_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: poetry run celery -A server.celery worker --pool=threads --loglevel=info
    healthcheck:
      test: ["CMD", "poetry", "run", "celery", "-A", "server.celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-beat:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
    env_file: ./app/config/.env
    environment:
      - DJANGO_DATABASE_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: poetry run celery -A server.celery beat --loglevel=info

  flower:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      target: development_build
    volumes:
      - ./app:/app
    ports:
      - "5555:5555"
    env_file: ./app/config/.env
    environment:
      - DJANGO_DATABASE_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    command: poetry run celery -A server.celery flower --port=5555

volumes:
  pgdata:
  django-static: